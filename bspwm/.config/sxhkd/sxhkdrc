#  .▄▄ · ▐▄• ▄  ▄ .▄▄ •▄ ·▄▄▄▄
#  ▐█ ▀.  █▌█▌▪██▪▐██▌▄▌▪██▪ ██
#  ▄▀▀▀█▄ ·██· ██▀▐█▐▀▀▄·▐█· ▐█▌
#  ▐█▄▪▐█▪▐█·█▌██▌▐▀▐█.█▌██. ██
#   ▀▀▀▀ •▀▀ ▀▀▀▀▀ ··▀  ▀▀▀▀▀▀• #

alt + r
    pkill -USR1 -x sxhkd; \
    notify-send -t 3000 'sxhkd reloaded'

#  ▄▄▄▄· .▄▄ ·  ▄▄▄·▄▄▌ ▐ ▄▌• ▌ ▄ ·.
#  ▐█ ▀█▪▐█ ▀. ▐█ ▄███· █▌▐█·██ ▐███▪
#  ▐█▀▀█▄▄▀▀▀█▄ ██▀·██▪▐█▐▐▌▐█ ▌▐▌▐█·
#  ██▄▪▐█▐█▄▪▐█▐█▪·•▐█▌██▐█▌██ ██▌▐█▌
#  ·▀▀▀▀  ▀▀▀▀ .▀    ▀▀▀▀ ▀▪▀▀  █▪▀▀▀

alt + shift + r
    bspc wm -r

# alternate between the tiled and monocle layout
alt + m
    bspc desktop -l next

# swap the current node and the biggest node
# alt + g
#    bspc node -s biggest
alt + g
    bspc node -s biggest

#  ▄▄▌ ▐ ▄▌      ▄▄▄  ▄ •▄ .▄▄ ·  ▄▄▄· ▄▄▄·  ▄▄· ▄▄▄ .
#  ██· █▌▐█▪     ▀▄ █·█▌▄▌▪▐█ ▀. ▐█ ▄█▐█ ▀█ ▐█ ▌▪▀▄.▀·
#  ██▪▐█▐▐▌ ▄█▀▄ ▐▀▀▄ ▐▀▀▄·▄▀▀▀█▄ ██▀·▄█▀▀█ ██ ▄▄▐▀▀▪▄
#  ▐█▌██▐█▌▐█▌.▐▌▐█•█▌▐█.█▌▐█▄▪▐█▐█▪·•▐█ ▪▐▌▐███▌▐█▄▄▌
#   ▀▀▀▀ ▀▪ ▀█▄▀▪.▀  ▀·▀  ▀ ▀▀▀▀ .▀    ▀  ▀ ·▀▀▀  ▀▀▀

super + Tab
    bspc desktop -f last

super + {1-9,0}
    bspc desktop -f '^{1-9,10}'

super + {Left,Right}
    bspc desktop -f {prev,next}.local

#   ▐ ▄       ·▄▄▄▄  ▄▄▄ .
#  •█▌▐█▪     ██▪ ██ ▀▄.▀·
#  ▐█▐▐▌ ▄█▀▄ ▐█· ▐█▌▐▀▀▪▄
#  ██▐█▌▐█▌.▐▌██. ██ ▐█▄▄▌
#  ▀▀ █▪ ▀█▄▀▪▀▀▀▀▀•  ▀▀▀

# close or kill
alt + {_,shift + }q
    bspc node -{c,k}

# send node
super + shift + {1-9,0}
    bspc node -d '^{1-9,10}'

# set the window state
alt + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
alt + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

# send the newest marked node to the newest preselected node
alt + y
    bspc node newest.marked.local -n newest.!automatic.local

# focus the node for the given path jump
# alt + {p,b,comma,period}
#    bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
# alt + {_,shift + } c
#    bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
# alt + bracket{left,right}
#    bspc desktop -f {prev,next}.local

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

alt + {_,shift + }{Left,Down,Up,Right}
    bspc node -{f,s} {west,south,north,east}

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + {Left,Down,Up,Right}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + alt + shift + {Left,Down,Up,Right}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + shift + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

#   ▐ ▄       ·▄▄▄▄  ▄▄▄ .    ▄▄▄        ▄▄▄▄▄ ▄▄▄· ▄▄▄▄▄▄▄▄ .
#  •█▌▐█▪     ██▪ ██ ▀▄.▀·    ▀▄ █·▪     •██  ▐█ ▀█ •██  ▀▄.▀·
#  ▐█▐▐▌ ▄█▀▄ ▐█· ▐█▌▐▀▀▪▄    ▐▀▀▄  ▄█▀▄  ▐█.▪▄█▀▀█  ▐█.▪▐▀▀▪▄
#  ██▐█▌▐█▌.▐▌██. ██ ▐█▄▄▌    ▐█•█▌▐█▌.▐▌ ▐█▌·▐█ ▪▐▌ ▐█▌·▐█▄▄▌
#  ▀▀ █▪ ▀█▄▀▪▀▀▀▀▀•  ▀▀▀     .▀  ▀ ▀█▄▀▪ ▀▀▀  ▀  ▀  ▀▀▀  ▀▀▀

alt + shift + {braceleft, braceright}
    bspc node -f @parent; \
    bspc node @/ -R {-90, 90}; \
    bspc node -f @second

alt + bracketleft
    bspc node -f @parent; \
    bspc node -R -90; \
    bspc node -f @second

alt + bracketright
    bspc node -f @parent; \
    bspc node -R 90; \
    bspc node -f @second

#   ▐ ▄       ·▄▄▄▄  ▄▄▄ .     ▄▄▄·▄▄▄  ▄▄▄ ..▄▄ · ▄▄▄ .▄▄▌  ▄▄▄ . ▄▄· ▄▄▄▄▄
#  •█▌▐█▪     ██▪ ██ ▀▄.▀·    ▐█ ▄█▀▄ █·▀▄.▀·▐█ ▀. â▄.▀·██•  ▀▄.▀·▐█ ▌▪•██
#  ▐█▐▐▌ ▄█▀▄ ▐█· ▐█▌▐▀▀▪▄     ██▀·▐▀▀▄ ▐▀▀▪▄▄▀▀▀█▄▐▀▀▪▄██▪  ▐▀▀▪▄██ ▄▄ ▐█.▪
#  ██▐█▌▐█▌.▐▌██. ██ ▐█▄▄▌    ▐█▪·•▐█•█▌▐█▄▄▌▐█▄▪▐█▐█▄▄▌▐█▌▐▌▐█▄▄▌▐███▌ ▐█▌·
#  ▀▀ █▪ ▀█▄▀▪▀▀▀▀▀•  ▀▀▀     .▀   .▀  ▀ ▀▀▀  ▀▀▀▀  ▀▀▀ .▀▀▀  ▀▀▀ ·▀▀▀  ▀▀▀

# preselect the direction
# alt + ctrl + {h,j,k,l}
#    bspc node -p {west,south,north,east}

# preselect the direction
alt + ctrl + {Left,Down,Up,Right}
    bspc node -p {west,south,north,east}

# preselect the ratio
alt + ctrl + {1-9}
    bspc node -o 0.{1-9}

# move to preselect
alt + shift + Return
    bspc node -n 'last.!automatic.local'

# cancel the preselection for the focused node
alt + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
alt + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#  ▄▄▌   ▄▄▄· ▄• ▄▌ ▐ ▄  ▄▄·  ▄ .▄▄▄▄ .▄▄▄
#  ██•  ▐█ ▀█ █▪██▌•█▌▐█▐█ ▌▪██▪▐█▀▄.▀·▀▄ █·
#  ██▪  ▄█▀▀█ █▌▐█▌▐█▐▐▌██ ▄▄██▀▐█▐▀▀▪▄▐▀▀▄
#  ▐█▌▐▌▐█ ▪▐▌▐█▄█▌██▐█▌▐███▌██▌▐▀▐█▄▄▌▐█•█▌
#  .▀▀▀  ▀  ▀  ▀▀▀ ▀▀ █▪·▀▀▀ ▀▀▀ · ▀▀▀ .▀  ▀

alt + shift + @space
    dmenu_run -fn "monospace-9" -nb "#101216" -nf "#dadada" -l 24

alt + @space
    rofi -show drun

alt + Return
    st

super + shift + Return
    $HOME/.scripts/bspwm-launch-application.sh \
        'xfce4-taskmanager' 'Task Manager'

super + {_, shift + } {b, c, f, k}
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'chromium' 'Chromium',                              \
        'firefox' 'Firefox',                                \
        'code' 'VS Code',                                   \
        'caprine' 'Caprine',                                \
        'thunar' 'Thunar',                                  \
        'st -c ranger -e ranger' 'Ranger',                  \
        'kodi' 'Kodi',                                      \
        '',                                                 \
    }

super + {_, shift + } e
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'st -c neomutt -e neomutt' 'NeoMutt',               \
        ''                                                  \
    }

super + {_, shift + } {m, s, t, x}
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'st -c ncmpcpp -e ncmpcpp' 'ncmpcpp',               \
        'megasync' 'Mega',                                  \
        'subl3' 'Sublime Text',                             \
        '',                                                 \
        'telegram-desktop' 'Telegram',                      \
        'teamviewer' 'Teamviewer',                          \
        'xdman' 'Xtream Download Manager',                  \
        '',                                                 \
    }

super + {_, shift + } r
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'st -c pyradio -e pyradio' 'Pyradio',               \
    }

super + {_, shift + } v
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'tmux-neovim' 'NeoVim',                             \
    }

super + {_, shift + } y
    $HOME/.scripts/bspwm-launch-application.sh {            \
        'gtk-youtube-viewer' 'Youtube Viewer',              \
        '',                                                 \
    }

{_, ctrl + } {_, shift + } Print
    $HOME/.scripts/screenshot.sh {'normal', 'freeze', 'select', 'freeze-now'}

#  .▄▄ ·  ▄▄▄·▄▄▄ . ▄▄· ▪   ▄▄▄· ▄▄▌
#  ▐█ ▀. ▐█ ▄█▀▄.▀·▐█ ▌▪██ ▐█ ▀█ ██•
#  ▄▀▀▀█▄ ██▀·▐▀▀▪▄██ ▄▄▐█·▄█▀▀█ ██▪
#  ▐█▄▪▐█▐█▪·•▐█▄▄▌▐███▌▐█▌▐█ ▪▐▌▐█▌▐▌
#   ▀▀▀▀ .▀    ▀▀▀ ·▀▀▀ ▀▀▀ ▀  ▀ .▀▀▀

alt + {_,shift + }p
    {mpc toggle,mpc next}

super + l
    $HOME/.scripts/lockscreen.sh

super + {_, ctrl + } Up
    $HOME/.scripts/bspwm-unhide-application.sh {'', "$(bspc query -D -d .focused)"}

super + Down
    bspc node -g hidden=on

super + Return
    $HOME/.scripts/st-popup.sh

Pause; Pause
    systemctl poweroff
